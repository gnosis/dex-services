if: (branch = master) OR (type = pull_request) OR (tag IS present)
matrix:
  include:
    - language: rust
      name: "Unit Tests"
      rust: 1.39.0
      cache: cargo
      before_cache:
        - find ./target/debug -type f -maxdepth 1 -delete
        - rm -fr ./target/debug/{deps,.fingerprint}/{*ra_*,*test*,*tools*,*gen_lsp*}
        - rm -f  ./target/.rustc_info.json
      env:
        - CARGO_INCREMENTAL=0
      before_script:
        - rustup component add clippy rustfmt
      script:
        - cargo test --all
        - cargo clippy --all --all-targets -- -D warnings
        - cargo fmt --all -- --check
    - language: generic
      name: "dÆ’usion e2e Tests"
      cache: 
        directories:
          - $HOME/.npm
      install:
        - ./test/setup_contracts.sh
      script:
        - docker-compose up -d driver graph-listener | while read line ; do echo "$(date)| $line"; done; # prints timestamps for profiling
        - ./test/e2e-tests-deposit-withdraw.sh
        - ./test/restart-containers.sh
        - ./test/e2e-tests-auction.sh
        - ./test/restart-containers.sh
        - ./test/e2e-tests-standing-order.sh
      after_failure:
        - docker-compose logs
    - language: generic
      name: "StableX e2e Tests (Ganache)"
      cache: 
        directories:
          - $HOME/.npm
      install:
        - ./test/setup_contracts.sh
      script:
        - docker-compose up -d stablex
        - ./test/e2e-tests-stablex-ganache.sh
      after_failure:
        - docker-compose logs
    - language: generic
      name: "StableX e2e Tests (Rinkeby)"
      cache: 
        directories:
          - $HOME/.npm
      install:
        - cd dex-contracts && npm ci && npx truffle compile && npm run networks-inject && cd ..
        - echo -e $GITLAB_PRIVATE_KEY > .ssh/id_rsa && chmod 0500 .ssh/id_rsa
        - docker-compose build --build-arg use_solver=1 stablex
      script:
        - docker-compose -f docker-compose.yml -f docker-compose.rinkeby.yaml up -d stablex
        - ./test/e2e-tests-stablex-rinkeby.sh
      after_failure:
        - docker-compose logs
      deploy:
        provider: script
        script: ./docker/deploy.sh
        on:
          branch: master
