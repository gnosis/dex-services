{"abi":[{"constant":true,"inputs":[],"name":"creator","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"minter","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"masterCopy","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"},{"name":"value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"},{"name":"spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Minted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"user","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Burnt","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"constant":false,"inputs":[{"name":"_masterCopy","type":"address"}],"name":"startMasterCopyCountdown","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"updateMasterCopy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getMasterCopy","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"newMinter","type":"address"}],"name":"setMinter","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"setNewOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"},{"name":"amount","type":"uint256"}],"name":"mintOWL","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"user","type":"address"},{"name":"amount","type":"uint256"}],"name":"burnOWL","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getMasterCopyCountdown","outputs":[{"name":"","type":"address"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"contractName":"TokenOWL","devdoc":{"methods":{"allowance(address,address)":{"details":"Returns number of allowed tokens for given address","params":{"owner":"Address of token owner","spender":"Address of token spender"},"return":"Remaining allowance for spender"},"approve(address,uint256)":{"details":"Sets approved amount of tokens for spender. Returns success","params":{"spender":"Address of allowed account","value":"Number of approved tokens"},"return":"Was approval successful?"},"balanceOf(address)":{"details":"Returns number of tokens owned by given address","params":{"owner":"Address of token owner"},"return":"Balance of owner"},"burnOWL(address,uint256)":{"details":"Burns OWL.","params":{"amount":"Amount of OWL to be burnt","user":"Address of OWL owner"}},"mintOWL(address,uint256)":{"details":"Mints OWL.","params":{"amount":"Amount of OWL to be minted","to":"Address to which the minted token will be given"}},"setMinter(address)":{"details":"Set minter. Only the creator of this contract can call this.","params":{"newMinter":"The new address authorized to mint this token"}},"setNewOwner(address)":{"details":"change owner/creator of the contract. Only the creator/owner of this contract can call this.","params":{"newOwner":"The new address, which should become the owner"}},"startMasterCopyCountdown(address)":{"details":"trickers the update process via the proxyMaster for a new address _masterCopy updating is only possible after 30 days"},"totalSupply()":{"details":"Returns total supply of tokens","return":"Total supply"},"transfer(address,uint256)":{"details":"Transfers sender's tokens to a given address. Returns success","params":{"to":"Address of token receiver","value":"Number of tokens to transfer"},"return":"Was transfer successful?"},"transferFrom(address,address,uint256)":{"details":"Allows allowed third party to transfer tokens from one address to another. Returns success","params":{"from":"Address from where tokens are withdrawn","to":"Address to where tokens are sent","value":"Number of tokens to transfer"},"return":"Was transfer successful?"},"updateMasterCopy()":{"details":"executes the update process via the proxyMaster for a new address _masterCopy"}}},"networks":{"1":{"address":"0x60fBbd1FB0076971E8060631b5dD895F55aD5ab7","events":{},"links":{},"transactionHash":"0x258db250a7308239f74f31ddcfca16a6bee2c2e3841dac4c627ecc94c3823474"},"4":{"address":"0x051f69377f6EBaf59eED8FA6164383644E41FFA2","events":{},"links":{},"transactionHash":"0x280045f8704a5503b6bc880051c629ab52fe6cb234b566eefb401fb5dbfc2769"},"42":{"address":"0xa98fdb77b578f30d5d88b3ebc2600bfe67fa09d1","events":{},"links":{},"transactionHash":"0xd20c4b939bac61ba0d88daab5fe54c38d077a5375d767e93d4e747b3cc65154c"}},"userdoc":{"methods":{}}}